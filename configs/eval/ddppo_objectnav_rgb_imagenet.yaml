EVAL_CKPT_PATH_DIR: "pretrained_models/objectnav-rgb-imagenet.175M.pth"
LOG_FILE: "logs/objectnav-rgb-imagenet/eval.log"
SIMULATOR_GPU_ID: 0
TORCH_GPU_ID: 0
NUM_ENVIRONMENTS: 11

TEST_EPISODE_COUNT: -1
EVAL:
  USE_CKPT_CONFIG: False
  DEVICE: 'cuda'
  NUM_ENVIRONMENTS: 11
  SPLIT: val

BASE_TASK_CONFIG_PATH: "configs/tasks/objectnav_mp3d_rgb.yaml"
TRAINER_NAME: "ddppo"
ENV_NAME: "NavRLEnv"
SENSORS: ["RGB_SENSOR"]

LOG_INTERVAL: 10
VIDEO_OPTION: ["tensorboard"]
TENSORBOARD_DIR: "logs/objectnav-rgb-imagenet/tb"

CMD_TRAILING_OPTS: ["TASK_CONFIG.ENVIRONMENT.ITERATOR_OPTIONS.MAX_SCENE_REPEAT_STEPS", "50000", "TASK_CONFIG.ENVIRONMENT.ITERATOR_OPTIONS.SHUFFLE", "False"]
FORCE_TORCH_SINGLE_THREADED: True

##

RL:
  SUCCESS_REWARD: 2.5
  SLACK_REWARD: -1e-3

  POLICY:
    name: "PointNavResNetPolicy"
    OBS_TRANSFORMS:
        ENABLED_TRANSFORMS: ("ResizeShortestEdge", "CenterCropper")

  PPO:
    # ppo params
    clip_param: 0.2
    ppo_epoch: 4
    num_mini_batch: 2
    value_loss_coef: 0.5
    entropy_coef: 0.01
    lr: 2.5e-4
    eps: 1e-5
    max_grad_norm: 0.2
    num_steps: 64
    use_gae: True
    gamma: 0.99
    tau: 0.95
    use_linear_clip_decay: False
    use_linear_lr_decay: False
    reward_window_size: 50
    use_normalized_advantage: False
    hidden_size: 512

  DDPPO:
    sync_frac: 0.6
    # The PyTorch distributed backend to use
    distrib_backend: NCCL
    # Visual encoder backbone
    pretrained_weights: data/ddppo-models/gibson-2plus-resnet50.pth
    # Initialize with pretrained weights
    pretrained: False
    # Initialize just the visual encoder backbone with pretrained weights
    pretrained_encoder: False
    # Whether or not the visual encoder backbone will be trained.
    train_encoder: False
    # Whether or not to reset the critic linear layer
    reset_critic: False

    # Model parameters
    backbone: resnet50_imagenet
    rnn_type: LSTM
    num_recurrent_layers: 2
